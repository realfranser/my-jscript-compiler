NoTerminales = { E R U V S L Q X B T F H A K C P V1 S1 E1 R1 U1 }
Axioma = P
Terminales = { lambda && == != + - ID ( ) ENT CAD TRUE FALSE ! ++ ALERT INPUT RETURN DO WHILE , ; = NUMBER BOOLEAN STRING FUNCTION LET { } IF }
Producciones = {
E -> R E1
E1 -> && R E1
E1 -> lambda
R -> U R1
R1 -> == U R1
R1 -> != U R1
R1 -> lambda
U -> V U1
U1 -> + V U1
U1 -> - V U1
U1 -> lambda
V -> ID V1
V1 -> ( L )
V1 -> ++
V1 -> lambda
V -> ( E ) 
V -> ENT 
V -> CAD 
V -> TRUE 
V -> FALSE 
V -> ! ID 
S -> ID S1
S -> ALERT ( E ) ;
S -> INPUT ( ID ) ;
S -> RETURN X ;
S1 -> = E ;
S1 -> ( L ) ;
S1 -> ++ ;
L -> E Q 
L -> lambda
Q -> , E Q 
Q -> lambda
X -> E 
X -> lambda
B -> IF ( E ) S 
B -> LET T ID ;
B -> S
B -> DO { C } WHILE ( E ) ;
T -> NUMBER 
T -> BOOLEAN 
T -> STRING
F -> FUNCTION H ID ( A ) { C }
H -> T 
H -> lambda
A -> T ID K 
A -> lambda
K -> , T ID K 
K -> lambda
C -> B C 
C -> lambda
P -> B P 
P -> F P
P -> lambda
S1 -> ++ ;
}